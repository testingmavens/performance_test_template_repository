name: JMeter Test and Publish Report

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    name: performance test - ${{ github.event.inputs.choice }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install JMeter
        run: |
          wget -q https://downloads.apache.org/jmeter/binaries/apache-jmeter-5.6.2.tgz
          tar -xzf apache-jmeter-5.6.2.tgz
          rm apache-jmeter-5.6.2.tgz
        working-directory: ${{ github.workspace }}

      - name: Run JMeter Test
        run: |
          JMETER_SCRIPT="${{ github.workspace }}/test_plan.jmx"
          JMETER_RESULTS="${{ github.workspace }}/test/JMeter/results"
          ./apache-jmeter-5.6.2/bin/jmeter -n -t "$JMETER_SCRIPT" -l "$JMETER_RESULTS/test_results.jtl"

      - name: Generate JMeter Report
        run: |
          JMETER_RESULTS="${{ github.workspace }}/test/JMeter/results"
          mkdir -p "$JMETER_RESULTS/report"
          ./apache-jmeter-5.6.2/bin/jmeter -g "$JMETER_RESULTS/test_results.jtl" -o "$JMETER_RESULTS/report"
      - name: Upload Test Report
        if: always()
        uses: actions/upload-pages-artifact@v2
        with:
            name: jmeter-report
            path: ${{github.workspace}}/test/Jmeter/results/report
      - name: Download HTML Report
        run: |
          mkdir -p ${{ github.workspace }}/html_report
          curl -LJO "https://${{ github.repository_owner }}.github.io/${{ github.repository }}/report/index.html" -o ${{ github.workspace }}/html_report/index.html

      - name: Set Environment Variable
        run: |
          echo "REPORT_URL=https://${{ github.repository_owner }}.github.io/${{ github.repository }}/report/index.html" >> $GITHUB_ENV

      - name: Deploy to Github Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: ${{ env.REPORT_URL }}
